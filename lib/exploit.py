#!/usr/bin/env python3

import requests

from datetime import datetime
from src import color as C
from lib import user_agent as UA


def Finder(args):

    # Handling and preparing the args.url.
    if args.url[:7] != "http://" and args.url[:8] != "https://":
        Target = "http://" + args.url
    elif args.url[:7] == "http://" or args.url[:8] == "https://":
        Target = args.url

    print("{}[+]{} Target: {}".format(C.GREEN, C.RESET, Target))

    # Generates a random user agent.
    if args.user_agent == False:
        UserAgent = UA.Random()
        print(
            "{}[+]{} Random User-Agent Generated: {}".format(C.GREEN, C.RESET, UserAgent))
    # Selects a User-Agent.
    elif args.user_agent != False:
        UserAgent = args.user_agent
        print("{}[+]{} User-Agent selected: {}".format(C.GREEN, C.RESET, UserAgent))

    # Make the request from the target site.
    try:
        headers = {'User-Agent': UserAgent}
        r = requests.get(Target + "/", headers=headers)
    except Exception:
        print("\n{}[!]{} ERROR! Targeted site reported is offline.".format(C.RED, C.RESET))
        exit()

    # Configures the selected Wordlist.
    if args.wordlist == "1":
        WList = open('extra/wordlists/small.txt', 'r')
        print("{}[+]{} Wordlist 'Small' selected.".format(C.GREEN, C.RESET))
    elif args.wordlist == "2":
        WList = open('extra/wordlists/medium.txt', 'r')
        print("{}[+]{} Wordlist 'Medium' selected.".format(C.GREEN, C.RESET))
    elif args.wordlist == "3":
        WList = open('extra/wordlists/big.txt', 'r')
        print("{}[+]{} Wordlist 'Big' selected.".format(C.GREEN, C.RESET))
    else:
        WList = open(args.wordlist)
        print("{}[+]{} Wordlist '{}' selected.".format(C.GREEN, C.RESET, args.wordlist))

    print("\n{}{}[!] Starting Exploit Finder.{}\n".format(C.BOLD, C.GREEN, C.RESET))
    Links = WList.readlines()
    
    # Finder Execution.
    for Link in Links:
        try:
            r = requests.get(Target + "/" + Link, headers=headers)
            if r.status_code == 200:
                print("{}{}[FOUND!]{} {}/{}".format(C.BOLD, C.GREEN, C.RESET, Target, Link.rstrip('\n')))
            elif r.status_code != 200:
                print("{}[-]{} {}/{}".format(C.RED, C.RESET, Target, Link.rstrip('\n')))
        except KeyboardInterrupt:
            print("\n{}[!]{} 'CTRL + C' has been pressed.".format(C.RED, C.RESET))
            OPC = input("\nDo you want to close Heimdall? [y/N] ")
            print("\n")
            if OPC == "Y" or OPC == "y":
                print ("\n{}[+]{} Finished!  Date: {} Time: {}".format(C.GREEN, C.RESET, datetime.now().strftime("%m/%d/%Y"), datetime.now().strftime("%H:%M")))
                print("{}[!]{} Script has been successfully terminated!".format(C.GREEN, C.RESET))
                exit()
            elif OPC == "N" or OPC == "n":
                continue
    print ("\n{}[+]{} Finished!  Date: {} Time: {}".format(C.GREEN, C.RESET, datetime.now().strftime("%m/%d/%Y"), datetime.now().strftime("%H:%M")))
    
